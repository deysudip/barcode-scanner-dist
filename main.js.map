{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/scanner/scanner.component.css","webpack:///./src/app/scanner/scanner.component.html","webpack:///./src/app/scanner/scanner.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-scanner></app-scanner>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Barcode Scanner App';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\n\nimport { AppComponent } from './app.component';\nimport { ScannerComponent } from './scanner/scanner.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ScannerComponent\n  ],\n  imports: [\n    BrowserModule,\n    ZXingScannerModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjYW5uZXIvc2Nhbm5lci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<zxing-scanner\\n  [formats]=\\\"allowedFormats\\\"\\n  [scannerEnabled]=\\\"scannerEnabled\\\"\\n  [autofocusEnabled]=\\\"autofocusEnabled\\\"\\n  [device]=\\\"desiredDevice\\\"\\n  (camerasFound)=\\\"camerasFoundHandler($event)\\\"\\n  (scanSuccess)=\\\"scanSuccessHandler($event)\\\"\\n  (scanError)=\\\"scanErrorHandler($event)\\\"\\n  (scanFailure)=\\\"scanFailureHandler($event)\\\"\\n  (scanComplete)=\\\"scanCompleteHandler($event)\\\">\\n</zxing-scanner>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { BarcodeFormat } from '@zxing/library';\nimport { ZXingScannerComponent } from '@zxing/ngx-scanner';\n\n@Component({\n  selector: 'app-scanner',\n  templateUrl: './scanner.component.html',\n  styleUrls: ['./scanner.component.css']\n})\nexport class ScannerComponent implements OnInit {\n\n  @ViewChild('scanner')\n  scanner: ZXingScannerComponent;\n\n  hasCameras = false;\n  hasPermission: boolean;\n  qrResultString: string;\n  availableDevices: MediaDeviceInfo[];\n  selectedDevice: MediaDeviceInfo;\n\n  allowedFormats = [ BarcodeFormat.QR_CODE, BarcodeFormat.EAN_13, BarcodeFormat.CODE_128, BarcodeFormat.DATA_MATRIX];\n  constructor() { }\n\n  ngOnInit(): void {\n\n    this.scanner.camerasFound.subscribe((devices: MediaDeviceInfo[]) => {\n      this.hasCameras = true;\n\n      console.log('Devices: ', devices);\n      this.availableDevices = devices;\n\n      // choosing rear camera by default\n      /*for (const device of devices) {\n          if (/back|rear|environment/gi.test(device.label)) {\n              this.scanner.changeDevice(device);\n              this.selectedDevice = device;\n              break;\n          }\n      }*/\n      this.scanner.scan(devices[0].deviceId);\n    });\n\n    this.scanner.camerasNotFound.subscribe((devices: MediaDeviceInfo[]) => {\n      console.error('No Camera Found.');\n    });\n\n    this.scanner.permissionResponse.subscribe((answer: boolean) => {\n      this.hasPermission = answer;\n    });\n  }\n\n  handleQrCodeResult(resultString: string) {\n    console.log('Result: ', resultString);\n    this.qrResultString = resultString;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}